{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","API_URL","getByTitle","url","fetch","then","response","ok","Error","status","statusText","json","IMDB_URL","FindMovie","onAddMovie","useState","setMovie","setTitle","titleError","setTitleError","a","foundMovie","Response","Title","Plot","Poster","imdbID","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","disabled","length","App","state","data","handleAddMovie","newMovie","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b921ad8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_KEY = 'e695d20c';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nconst request = url => fetch(`${API_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} --- ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n\nexport const getByTitle = title => request(`&t=${title}`);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getByTitle } from '../../api';\n\nconst IMDB_URL = 'https://www.imdb.com/title/';\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  async function handleFindMovie() {\n    const foundMovie = await getByTitle(title);\n\n    if (foundMovie.Response === 'False') {\n      setTitleError(true);\n\n      return;\n    }\n\n    setMovie({\n      title: foundMovie.Title,\n      description: foundMovie.Plot,\n      imgUrl: foundMovie.Poster,\n      imdbId: foundMovie.imdbID,\n      imdbUrl: `${IMDB_URL}${foundMovie.imdbID}`,\n    });\n  }\n\n  function handleTitleChange(e) {\n    setTitleError(false);\n    setTitle(e.target.value);\n  }\n\n  function handleAddMovie() {\n    onAddMovie(movie);\n    setTitle('');\n    setMovie(null);\n  }\n\n  function isAddToListDisabled() {\n    return titleError || title.length === 0 || !movie;\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={e => e.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger': titleError,\n              })}\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {titleError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddMovie}\n              disabled={isAddToListDisabled()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  handleAddMovie = (newMovie) => {\n    if (this.state.movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        newMovie,\n      ],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAddMovie={this.handleAddMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}